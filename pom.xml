<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.subhadipmitra.datory</groupId>
	<artifactId>etl-preprocessing</artifactId>
	<version>1.01</version>
	<packaging>pom</packaging>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<scala.version>2.11</scala.version>
		<scala.tools.version>2.15.2</scala.tools.version>
		<scala.library.version>2.11.0</scala.library.version>
		<jython.version>2.7.0</jython.version>
		<hadoop.version>2.6.0-cdh5.14.4</hadoop.version>
		<spark.version>2.4.8.7.2.12.0-291</spark.version>
		<sl4j.version>1.7.21</sl4j.version>
		<log4j.version>1.2.17</log4j.version>
		<guava.version>12.0.1</guava.version>
		<commons.io.version>2.7</commons.io.version>
		<commons.lang3.version>3.0</commons.lang3.version>
		<commons.math3.version>3.2</commons.math3.version>
		<cloud9.version>1.3.2</cloud9.version>
		<jackson.version>2.9.10.8</jackson.version>
		<maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
		<maven.exec.plugin.version>1.6.0</maven.exec.plugin.version>
		<maven.resources.plugin.version>3.1.0</maven.resources.plugin.version>
		<maven.versions.plugin.version>2.3</maven.versions.plugin.version>
		<maven.assembly.plugin.version>2.5.3</maven.assembly.plugin.version>
		<maven.clean.plugin.version>2.4.1</maven.clean.plugin.version>
		<maven.dependency.plugin.version>3.1.1</maven.dependency.plugin.version>
		<scala.logging.version>3.9.0</scala.logging.version>
	</properties>
	<modules>
		<module>core</module>
		<module>bridge</module>
		<module>common</module>
		<module>utils</module>
		<module>model</module>
		<module>pipeline</module>
		<module>client</module>
	</modules>
	<repositories>
		<repository>
			<id>cloudera</id>
			<url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
		</repository>
	</repositories>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${sl4j.version}</version>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.python</groupId>
				<artifactId>jython-standalone</artifactId>
				<version>${jython.version}</version>
			</dependency>
			<dependency>
				<groupId>org.scala-lang</groupId>
				<artifactId>scala-library</artifactId>
				<version>${scala.library.version}</version>
			</dependency>
			<dependency>
				<groupId>com.typesafe.scala-logging</groupId>
				<artifactId>scala-logging_2.12</artifactId>
				<version>${scala.logging.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-common</artifactId>
				<version>${hadoop.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-hdfs</artifactId>
				<version>${hadoop.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-mapreduce-client-core</artifactId>
				<version>${hadoop.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.spark</groupId>
				<artifactId>spark-core_${scala.version}</artifactId>
				<version>${spark.version}</version>
				<scope>provided</scope>
				<exclusions>
					<exclusion>
						<artifactId>lz4</artifactId>
						<groupId>net.jpountz.lz4</groupId>
					</exclusion>

				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.spark</groupId>
				<artifactId>spark-yarn_${scala.version}</artifactId>
				<version>${spark.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.spark</groupId>
				<artifactId>spark-sql_${scala.version}</artifactId>
				<version>${spark.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons.io.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons.lang3.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-math3</artifactId>
				<version>${commons.math3.version}</version>
			</dependency>
			<dependency>
				<groupId>edu.umd</groupId>
				<artifactId>cloud9</artifactId>
				<version>${cloud9.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.subhadipmitra.datory.hook</groupId>
				<artifactId>datoryinterfaces</artifactId>
				<version>0.0.1</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>oracle.jdbc.driver.OracleDriver</groupId>
				<artifactId>ojdbc</artifactId>
				<version>6</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compiler.plugin.version}</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>${maven.exec.plugin.version}</version>
					<configuration>
						<cleanupDaemonThreads>false</cleanupDaemonThreads>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.0.0-M2</version>
				<configuration>
					<rules><dependencyConvergence/></rules>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven.resources.plugin.version}</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>${maven.versions.plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven.dependency.plugin.version}</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
					<execution>
						<id>copy-artifact</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>${project.artifactId}</artifactId>
									<version>${project.version}</version>
									<type>${project.packaging}</type>
								</artifactItem>
							</artifactItems>
							<outputDirectory>../output/modules/${project.artifactId}</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>copy-dependencies-output</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>../output/modules/${project.artifactId}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>${maven.clean.plugin.version}</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>../output/modules/${project.artifactId}</directory>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
